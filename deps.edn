{:paths   ["src/main/clojure" "src/main/resources"]
 :deps    {io.github.humbleui/skija-linux-x64       {:mvn/version "0.116.2"}
           io.github.humbleui/skija-macos-x64       {:mvn/version "0.116.2"}
           io.github.humbleui/skija-shared          {:mvn/version "0.116.2"}
           io.github.humbleui/skija-windows-x64     {:mvn/version "0.116.2"}
           org.clojure/clojure                      {:mvn/version "1.12.0"}
           org.clojure/tools.cli                    {:mvn/version "1.1.230"}}
 :aliases {:build            {:extra-deps {io.github.clojure/tools.build {:mvn/version "0.10.3"}}
                              :ns-default build}
           :lint             {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2024.03.13"}}
                              :main-opts  ["-m" "clj-kondo.main" "--lint" "src" "--parallel"]}
           :test             {:extra-deps  {lambdaisland/kaocha           {:mvn/version "1.91.1392"}
                                            lambdaisland/kaocha-cloverage {:mvn/version "1.1.89"}}
                              :main-opts   ["-m" "kaocha.runner"]
                              :exec-fn     kaocha.runner/exec-fn
                              :extra-paths ["src/test/clojure"]}
           :test/unit        {:extra-deps  {lambdaisland/kaocha           {:mvn/version "1.91.1392"}
                                            lambdaisland/kaocha-cloverage {:mvn/version "1.1.89"}}
                              :main-opts   ["-m" "kaocha.runner" ":unit"]
                              :exec-fn     kaocha.runner/exec-fn
                              :extra-paths ["src/test/clojure"]}
           :test/integration {:extra-deps  {lambdaisland/kaocha           {:mvn/version "1.91.1392"}
                                            lambdaisland/kaocha-cloverage {:mvn/version "1.1.89"}}
                              :main-opts   ["-m" "kaocha.runner" ":integration"]
                              :exec-fn     kaocha.runner/exec-fn
                              :extra-paths ["src/test/clojure"]}}}